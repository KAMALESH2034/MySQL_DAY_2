DESIGN DB MODEL FOR GUVI ZEN CLASS
-----------------------------------

1.Users:

    create table Users(
        user_id int primary key,
        name varchar(30),
        email varchar(40)
    );

2. Students :

    create table Students(
        user_id int,
        student_id int primary key,
        name varchar(30),
        email varchar(40),
        phone_no int   
    );

3. Mentors :

    create table Mentors(
        mentor_id int primary key,
        name varchar(30),
        email varchar(40),
        phone_no int,
        qualification varchar(30),
        experience int
    );

4. Courses :

    create table Courses(
        course_id int primary key,
        user_id int,
        mentor_id int,
        course_name varchar(30),
        course_duration(MM) int
    );

5. All Topics :

    create table topics(
        topic_id int primary key,
        course_id int,
        user_id int,
        topic_name varchar(30),
        sessions int,
        mentor_id int
    );

6. All tasks :

    create table tasks(
        task_id int primary key,
        topic_id int,
        user_id int,
        task_created date,
        task_name varchar(30),
        description text,
        total_marks int,
        marks_obtained int,
        remarks text
    );

7. attendance :
    create table attendance(
        attendance_id int primary key,
        topic_id int,
        user_id int,
        attendance_date date,
        attendance_status varchar(30)
    );

8. feedback :

    create table feedback(
        feedback_id int primary key,
        topic_id int,
        mentor_id int,
        user_id int,
        feedback_date date,
        feedback_text text
    );

INSERT VALUES TO DB:
--------------------

1. Users :

    - insert into Users (user_id,name,email) values
        (1,'naveen','naveen@gmail.com'),
        (2,'anu','anu@gmail.com');

2. Students :

    - insert into Students(user_id,student_id,name,email,phone_no) values
        (1,101,'naveen','naveen@gmail.com',9876543210),
        (2,102,'anu','anu@gmail.com',9876543210);

3. Mentors :

    -insert into Mentors(mentor_id,name,email,phone_no,qualification,experience) values
        (1,'Rosy','Rosy@gmail.com',9876543210,'MCA',6),
        (2,'Selvi','Selvi@gmail.com',9876543211,'M.E.CS',7);
   

4. Courses :

    -insert into Courses(course_id,user_id,mentor_id,course_name,course_duration) values
        (1,1,1,'FSD',3),
        (2,2,2,'DSA',2);

5. All Topics :

    -insert into topics(topic_id,course_id,user_id,topic_name,sessions,mentor_id) values
        (1,1,1,'HTML',5,1)
        (2,1,1,'CSS',5,1),
        (3,1,1,'JS',5,1),
        (4,1,1,'REACT',5,1),
        (5,2,2,'ARRAYS',5,2),
        (6,2,2,'LINKEDLIST',5,2),
        (7,2,2,'STACK',5,2),
        (8,2,2,'QUEUE',5,2);

6. All tasks :

    -insert into tasks(task_id,topic_id,user_id,task_created,task_name,description,total_marks,marks_obtained,remarks) values
        (1,1,1,'2024-06-01','HTML','HTML task',100,94,'excellent'),
        (2,1,1,'2024-06-06','CSS','CSS task',100,87,'Good'),
        (3,1,1,'2024-06-18','JS','JS task',100,82,'Good'),
        (4,2,2,'2024-07-04','ARRAYS','ARRAYS task',100,63,'Can do better'),
        (5,2,2,'2024-07-10','LINKEDLIST','LINKEDLIST task',100,78,'Good'),
        (6,2,2,'2024-07-18','STACK','STACK task',100,90,'Excellent');

7. attendance :

    -insert into attendance(attendance_id,topic_id,user_id,attendance_date,attendance_status) values
        (1,1,1,'2024-06-01','present'),
        (2,1,1,'2024-06-02','absent'),
        (3,1,1,'2024-06-03','present'),
        (4,2,2,'2024-07-04','present'),
        (5,2,2,'2024-07-05','absent');

8. feedback :

    -insert into feedback(feedback_id,topic_id,mentor_id,user_id,feedback_date,feedback_text) values
        (1,1,1,1,'2024-06-01','HTML topics is good'),
        (2,1,1,1,'2024-06-06','CSS topics is good'),
        (3,1,1,1,'2024-06-18','JS topics is good'),
        (4,2,2,2,'2024-07-04','ARRAYS topics is good');


TO VIEW THE TABLES:
--------------------

1. Users :

    - select * from Users;

2. Students :

    - select * from Students;

3. Mentors :

    - select * from Mentors;

4. Courses :
 
    - select * from Courses;

5. All Topics :

    - select * from topics;

6. All tasks :

    - select * from tasks;

7. attendance :

    - select * from attendance;

8. feedback :

    - select * from feedback;


DELETING A ROW FROM TABLES:
----------------------------

1. Users :

    - delete from Users where user_id = 1;

2. Students :

    - delete from Students where student_id = 101;

3. Mentors :

    - delete from Mentors where mentor_id = 1;

4. Courses :

    - delete from Courses where course_id = 1;

5. All Topics :

    - delete from topics where topic_id = 1;

6. All tasks :

    - delete from tasks where task_id = 1;

7. attendance :

    - delete from attendance where attendance_id = 1;

8. feedback :

    - delete from feedback where feedback_id = 1;